// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20240207083006_AddSeeding")]
    partial class AddSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Models.Custommer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("custommer_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Date")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("custommer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2019, 1, 27, 6, 10, 7, 607, DateTimeKind.Local),
                            Email = "QWER@hotmail.com",
                            Name = "Kanthee K",
                            Phone = "111111",
                            UpdatedAt = new DateTime(2022, 7, 28, 19, 11, 24, 622, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2019, 9, 14, 5, 35, 3, 27, DateTimeKind.Local),
                            Email = "1234A@hotmail.com",
                            Name = "Mohans M",
                            Phone = "22222",
                            UpdatedAt = new DateTime(2022, 12, 12, 18, 56, 13, 260, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2019, 8, 7, 6, 48, 41, 89, DateTimeKind.Local),
                            Email = "QDollkee@hotmail.com",
                            Name = "Sqlq Q",
                            Phone = "33333",
                            UpdatedAt = new DateTime(2022, 11, 2, 10, 12, 14, 357, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2019, 6, 30, 13, 59, 6, 252, DateTimeKind.Local),
                            Email = "XCXXx@hotmail.com",
                            Name = "Xcewwww",
                            Phone = "44444",
                            UpdatedAt = new DateTime(2022, 5, 17, 18, 5, 2, 886, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rating");

                    b.Property<int>("Runtime")
                        .HasColumnType("integer")
                        .HasColumnName("runtime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Date")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2017, 8, 24, 21, 4, 53, 878, DateTimeKind.Local),
                            Rating = "10",
                            Runtime = 160,
                            Title = "IRONMNAA",
                            UpdatedAt = new DateTime(2022, 7, 23, 18, 43, 11, 249, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2004, 2, 21, 22, 24, 6, 878, DateTimeKind.Local),
                            Rating = "2",
                            Runtime = 90,
                            Title = "BARbie",
                            UpdatedAt = new DateTime(2022, 12, 26, 23, 21, 52, 422, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2003, 2, 3, 20, 8, 22, 172, DateTimeKind.Local),
                            Rating = "5",
                            Runtime = 66,
                            Title = "Avatar",
                            UpdatedAt = new DateTime(2022, 10, 12, 4, 37, 28, 471, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2006, 8, 11, 17, 35, 12, 226, DateTimeKind.Local),
                            Rating = "9",
                            Runtime = 15,
                            Title = "Fight Club",
                            UpdatedAt = new DateTime(2022, 1, 30, 23, 3, 11, 338, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2006, 12, 2, 19, 8, 51, 250, DateTimeKind.Local),
                            Rating = "16",
                            Runtime = 200,
                            Title = "God Father",
                            UpdatedAt = new DateTime(2022, 4, 21, 15, 53, 6, 540, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("screening_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer");

                    b.Property<int>("ScreenNumber")
                        .HasColumnType("integer")
                        .HasColumnName("screen_number");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("Date")
                        .HasColumnName("start_at");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Date")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("screening");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 9, 12, 12, 20, 19, 821, DateTimeKind.Local),
                            MovieId = 3,
                            ScreenNumber = 4,
                            StartAt = new DateTime(2024, 2, 15, 16, 19, 31, 66, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 29, 10, 45, 47, 715, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 10, 10, 4, 56, 29, 935, DateTimeKind.Local),
                            MovieId = 4,
                            ScreenNumber = 7,
                            StartAt = new DateTime(2024, 2, 26, 23, 50, 57, 848, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 22, 20, 26, 18, 507, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 1, 26, 15, 35, 2, 181, DateTimeKind.Local),
                            MovieId = 3,
                            ScreenNumber = 8,
                            StartAt = new DateTime(2024, 2, 27, 10, 55, 25, 316, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 15, 15, 38, 31, 271, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 9, 20, 5, 3, 13, 119, DateTimeKind.Local),
                            MovieId = 3,
                            ScreenNumber = 8,
                            StartAt = new DateTime(2024, 2, 27, 22, 21, 18, 524, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 16, 8, 45, 27, 413, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 9, 24, 12, 16, 53, 158, DateTimeKind.Local),
                            MovieId = 5,
                            ScreenNumber = 4,
                            StartAt = new DateTime(2024, 2, 28, 2, 57, 0, 79, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 16, 16, 39, 31, 641, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 10, 9, 19, 56, 26, 588, DateTimeKind.Local),
                            MovieId = 2,
                            ScreenNumber = 4,
                            StartAt = new DateTime(2024, 2, 28, 1, 50, 48, 318, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 20, 14, 32, 31, 291, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 6, 9, 10, 6, 12, 415, DateTimeKind.Local),
                            MovieId = 1,
                            ScreenNumber = 1,
                            StartAt = new DateTime(2024, 2, 28, 3, 42, 56, 791, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 27, 4, 1, 0, 358, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 2, 3, 0, 44, 14, 223, DateTimeKind.Local),
                            MovieId = 3,
                            ScreenNumber = 9,
                            StartAt = new DateTime(2024, 2, 28, 3, 44, 54, 40, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 17, 16, 33, 18, 782, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 10, 1, 22, 25, 42, 232, DateTimeKind.Local),
                            MovieId = 4,
                            ScreenNumber = 6,
                            StartAt = new DateTime(2024, 2, 28, 3, 13, 25, 766, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 28, 0, 6, 46, 172, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 5, 22, 11, 32, 20, 895, DateTimeKind.Local),
                            MovieId = 4,
                            ScreenNumber = 9,
                            StartAt = new DateTime(2024, 2, 28, 1, 48, 16, 446, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 18, 3, 56, 13, 48, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 11,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 5, 26, 21, 1, 43, 653, DateTimeKind.Local),
                            MovieId = 1,
                            ScreenNumber = 3,
                            StartAt = new DateTime(2024, 2, 28, 4, 4, 35, 707, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 26, 10, 49, 4, 743, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 12,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 9, 14, 14, 3, 46, 653, DateTimeKind.Local),
                            MovieId = 3,
                            ScreenNumber = 3,
                            StartAt = new DateTime(2024, 2, 28, 2, 21, 52, 568, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 23, 11, 24, 51, 706, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 13,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 1, 10, 15, 28, 0, 295, DateTimeKind.Local),
                            MovieId = 4,
                            ScreenNumber = 9,
                            StartAt = new DateTime(2024, 2, 28, 2, 11, 23, 427, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 27, 22, 40, 33, 987, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 14,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 2, 23, 0, 20, 36, 260, DateTimeKind.Local),
                            MovieId = 1,
                            ScreenNumber = 8,
                            StartAt = new DateTime(2024, 2, 28, 3, 28, 41, 743, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 18, 8, 15, 31, 64, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 15,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 5, 9, 9, 24, 41, 701, DateTimeKind.Local),
                            MovieId = 4,
                            ScreenNumber = 6,
                            StartAt = new DateTime(2024, 2, 28, 1, 38, 2, 589, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 23, 4, 59, 28, 559, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 16,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 8, 18, 4, 28, 18, 53, DateTimeKind.Local),
                            MovieId = 5,
                            ScreenNumber = 6,
                            StartAt = new DateTime(2024, 2, 28, 4, 50, 36, 41, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 17, 12, 36, 37, 507, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 17,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 3, 11, 12, 37, 8, 609, DateTimeKind.Local),
                            MovieId = 1,
                            ScreenNumber = 5,
                            StartAt = new DateTime(2024, 2, 28, 6, 50, 32, 134, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 17, 19, 1, 2, 233, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 18,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 11, 6, 21, 7, 19, 971, DateTimeKind.Local),
                            MovieId = 3,
                            ScreenNumber = 7,
                            StartAt = new DateTime(2024, 2, 28, 1, 12, 42, 422, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 28, 6, 57, 28, 391, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 19,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 7, 25, 2, 33, 15, 671, DateTimeKind.Local),
                            MovieId = 5,
                            ScreenNumber = 6,
                            StartAt = new DateTime(2024, 2, 28, 3, 40, 2, 233, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 24, 15, 56, 30, 308, DateTimeKind.Local)
                        },
                        new
                        {
                            Id = 20,
                            Capacity = 50,
                            CreatedAt = new DateTime(2022, 7, 26, 16, 22, 13, 743, DateTimeKind.Local),
                            MovieId = 3,
                            ScreenNumber = 2,
                            StartAt = new DateTime(2024, 2, 28, 2, 18, 56, 882, DateTimeKind.Local),
                            UpdatedAt = new DateTime(2024, 1, 18, 6, 34, 6, 522, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Ticket", b =>
                {
                    b.Property<int>("ScreeningId")
                        .HasColumnType("integer");

                    b.Property<int>("CustommerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("Date")
                        .HasColumnName("created_at");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("ticket_id");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("integer")
                        .HasColumnName("seat_number");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("Date")
                        .HasColumnName("updated_at");

                    b.HasKey("ScreeningId", "CustommerId", "CreatedAt");

                    b.HasIndex("CustommerId");

                    b.ToTable("ticket");

                    b.HasData(
                        new
                        {
                            ScreeningId = 6,
                            CustommerId = 3,
                            CreatedAt = new DateTime(2022, 6, 9, 17, 22, 12, 20, DateTimeKind.Local),
                            Id = 1,
                            SeatNumber = 31,
                            UpdatedAt = new DateTime(2024, 1, 21, 15, 42, 36, 297, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 3,
                            CustommerId = 1,
                            CreatedAt = new DateTime(2022, 3, 24, 18, 5, 52, 766, DateTimeKind.Local),
                            Id = 1,
                            SeatNumber = 3,
                            UpdatedAt = new DateTime(2024, 1, 17, 7, 16, 1, 876, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 9,
                            CustommerId = 2,
                            CreatedAt = new DateTime(2022, 7, 3, 14, 8, 25, 295, DateTimeKind.Local),
                            Id = 2,
                            SeatNumber = 17,
                            UpdatedAt = new DateTime(2024, 1, 24, 17, 34, 30, 569, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 7,
                            CustommerId = 1,
                            CreatedAt = new DateTime(2022, 1, 9, 8, 19, 11, 997, DateTimeKind.Local),
                            Id = 3,
                            SeatNumber = 18,
                            UpdatedAt = new DateTime(2024, 1, 28, 1, 24, 40, 998, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 15,
                            CustommerId = 1,
                            CreatedAt = new DateTime(2022, 8, 15, 1, 9, 5, 367, DateTimeKind.Local),
                            Id = 4,
                            SeatNumber = 37,
                            UpdatedAt = new DateTime(2024, 1, 21, 1, 27, 21, 16, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 11,
                            CustommerId = 2,
                            CreatedAt = new DateTime(2022, 10, 12, 20, 36, 18, 999, DateTimeKind.Local),
                            Id = 5,
                            SeatNumber = 2,
                            UpdatedAt = new DateTime(2024, 1, 19, 21, 18, 45, 293, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 7,
                            CustommerId = 2,
                            CreatedAt = new DateTime(2022, 12, 5, 2, 50, 6, 209, DateTimeKind.Local),
                            Id = 6,
                            SeatNumber = 16,
                            UpdatedAt = new DateTime(2024, 1, 28, 8, 26, 3, 32, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 10,
                            CustommerId = 1,
                            CreatedAt = new DateTime(2022, 12, 30, 13, 43, 40, 599, DateTimeKind.Local),
                            Id = 7,
                            SeatNumber = 40,
                            UpdatedAt = new DateTime(2024, 1, 19, 21, 21, 37, 476, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 5,
                            CustommerId = 1,
                            CreatedAt = new DateTime(2022, 1, 13, 14, 17, 52, 544, DateTimeKind.Local),
                            Id = 8,
                            SeatNumber = 9,
                            UpdatedAt = new DateTime(2024, 1, 16, 18, 46, 36, 263, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 15,
                            CustommerId = 2,
                            CreatedAt = new DateTime(2022, 3, 6, 9, 14, 29, 922, DateTimeKind.Local),
                            Id = 9,
                            SeatNumber = 12,
                            UpdatedAt = new DateTime(2024, 1, 26, 7, 23, 54, 555, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 19,
                            CustommerId = 4,
                            CreatedAt = new DateTime(2022, 3, 19, 0, 24, 44, 845, DateTimeKind.Local),
                            Id = 10,
                            SeatNumber = 10,
                            UpdatedAt = new DateTime(2024, 1, 28, 3, 17, 53, 956, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 7,
                            CustommerId = 1,
                            CreatedAt = new DateTime(2022, 3, 27, 15, 23, 53, 796, DateTimeKind.Local),
                            Id = 11,
                            SeatNumber = 32,
                            UpdatedAt = new DateTime(2024, 1, 27, 0, 2, 14, 272, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 17,
                            CustommerId = 4,
                            CreatedAt = new DateTime(2022, 8, 20, 9, 37, 40, 139, DateTimeKind.Local),
                            Id = 12,
                            SeatNumber = 43,
                            UpdatedAt = new DateTime(2024, 1, 20, 17, 30, 5, 659, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 1,
                            CustommerId = 4,
                            CreatedAt = new DateTime(2022, 6, 29, 10, 7, 17, 360, DateTimeKind.Local),
                            Id = 13,
                            SeatNumber = 12,
                            UpdatedAt = new DateTime(2024, 1, 18, 11, 25, 26, 294, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 5,
                            CustommerId = 4,
                            CreatedAt = new DateTime(2022, 10, 27, 2, 41, 6, 653, DateTimeKind.Local),
                            Id = 14,
                            SeatNumber = 43,
                            UpdatedAt = new DateTime(2024, 1, 16, 4, 3, 41, 416, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 12,
                            CustommerId = 4,
                            CreatedAt = new DateTime(2022, 11, 2, 1, 9, 18, 100, DateTimeKind.Local),
                            Id = 15,
                            SeatNumber = 19,
                            UpdatedAt = new DateTime(2024, 1, 26, 6, 42, 54, 649, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 17,
                            CustommerId = 2,
                            CreatedAt = new DateTime(2022, 11, 18, 2, 15, 47, 413, DateTimeKind.Local),
                            Id = 16,
                            SeatNumber = 3,
                            UpdatedAt = new DateTime(2024, 1, 16, 15, 53, 1, 381, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 4,
                            CustommerId = 1,
                            CreatedAt = new DateTime(2022, 1, 10, 8, 12, 21, 580, DateTimeKind.Local),
                            Id = 17,
                            SeatNumber = 40,
                            UpdatedAt = new DateTime(2024, 1, 19, 4, 23, 37, 17, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 17,
                            CustommerId = 1,
                            CreatedAt = new DateTime(2022, 10, 1, 18, 57, 46, 52, DateTimeKind.Local),
                            Id = 18,
                            SeatNumber = 44,
                            UpdatedAt = new DateTime(2024, 1, 25, 10, 11, 3, 598, DateTimeKind.Local)
                        },
                        new
                        {
                            ScreeningId = 18,
                            CustommerId = 1,
                            CreatedAt = new DateTime(2022, 5, 21, 1, 31, 57, 781, DateTimeKind.Local),
                            Id = 19,
                            SeatNumber = 19,
                            UpdatedAt = new DateTime(2024, 1, 27, 11, 23, 58, 684, DateTimeKind.Local)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Screening", b =>
                {
                    b.HasOne("api_cinema_challenge.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Ticket", b =>
                {
                    b.HasOne("api_cinema_challenge.Models.Custommer", "Custommer")
                        .WithMany("Tickets")
                        .HasForeignKey("CustommerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api_cinema_challenge.Models.Screening", "Screening")
                        .WithMany()
                        .HasForeignKey("ScreeningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Custommer");

                    b.Navigation("Screening");
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Custommer", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
